package org.ops4j.repository.base;import java.io.IOException;import org.junit.Test;import org.ops4j.pax.repository.Artifact;import org.ops4j.pax.repository.ArtifactQuery;import org.ops4j.pax.repository.RepositoryException;import org.ops4j.pax.repository.Resolver;import org.ops4j.pax.repository.base.CompositeResolver;import static junit.framework.Assert.*;import static org.mockito.Mockito.*;/** * */public class CompositeResolverTest{    @Test    public void testWithoutAnyResolver()        throws IOException, RepositoryException    {        Resolver<ArtifactQuery> resolver = new CompositeResolver<ArtifactQuery>();        ArtifactQuery query = mock( ArtifactQuery.class );        Artifact artifact = resolver.find( query );        assertNull( artifact );    }    @Test    public void testWithResolvers()        throws IOException, RepositoryException    {        Resolver<ArtifactQuery> r1 = mock( Resolver.class );        Resolver<ArtifactQuery> r2 = mock( Resolver.class );        Resolver<ArtifactQuery> resolver = new CompositeResolver<ArtifactQuery>( r1, r2 );        ArtifactQuery query = mock( ArtifactQuery.class );        Artifact artifact = resolver.find( query );        verify( r1, times( 1 ) ).find( query );        verify( r2, times( 1 ) ).find( query );    }}