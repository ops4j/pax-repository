package org.ops4j.base.io;import java.io.IOException;import java.io.InputStream;import org.junit.Test;import org.ops4j.store.Handle;import org.ops4j.store.Store;import static junit.framework.Assert.*;import static org.mockito.Mockito.*;/** * */public class LazyCachedInputStreamTest{    @Test    public void testLazyCachedInputStreamSourceTest()        throws IOException    {        // Setup:        Store<InputStream> store = mock( Store.class );        InputStream input = getSource();        Handle handle = mock( Handle.class );        when( store.store( input ) ).thenReturn( handle );        when( store.load( handle ) ).thenReturn( input );        LazyCachedInputStreamSource source = new LazyCachedInputStreamSource( store, input );        // should have not fetched anything yet.        verifyZeroInteractions( store );        InputStream stream = source.get();        assertNotNull( stream );        verify( store, times( 1 ) ).store( input );        // again        source.get();        // no more interactions!        verify( store, times( 1 ) ).store( input );    }    public InputStream getSource()    {        return this.getClass().getResourceAsStream( "/test.txt" );    }}